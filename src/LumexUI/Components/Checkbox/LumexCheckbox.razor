@namespace LumexUI
@inherits LumexBooleanInputBase

<LumexComponent As="label"
                Class="@RootClass"
                Style="@RootStyle"
                tabindex="0"
                data-slot="base"
                data-checked="@CurrentValue.ToAttributeValue()"
                data-disabled="@GetDisabledState().ToAttributeValue()"
                data-readonly="@GetReadOnlyState().ToAttributeValue()"
                @attributes="@AdditionalAttributes"
                @onclick:stopPropagation="@true">
    <span class="@WrapperClass" data-slot="wrapper">
        <span class="@StyleUtils.VisuallyHidden">
            <input type="checkbox"
                   value="@true"
                   checked="@CurrentValue"
                   disabled="@GetDisabledState()"
                   @onchange="@OnChangeAsync" />
        </span>

        <span class="@IconClass" data-slot="icon">
            @if( IconContent is not null )
            {
                @IconContent
            }
            else
            {
                @_renderCheckIcon
            }
        </span>

    </span>

    @if( ChildContent is not null )
    {
        <span class="@LabelClass" data-slot="label">
            @ChildContent
        </span>
    }
</LumexComponent>

@code {
    private void RenderCheckIcon( RenderTreeBuilder __builder )
    {
        var style = ElementStyle.Empty()
            .Add( "transition", "stroke-dashoffset 0.2s linear 0.15s", when: CurrentValue )
            .ToString();

        <svg viewBox="0 0 17 18" 
             fill="none" 
             stroke="currentColor" 
             stroke-dasharray="22" 
             stroke-dashoffset="@(CurrentValue ? 44 : 66)" 
             stroke-linecap="round" 
             stroke-linejoin="round" 
             stroke-width="2"
             style="@style">
            <polyline points="1 9 7 14 15 4"/>
        </svg>
    }
}
