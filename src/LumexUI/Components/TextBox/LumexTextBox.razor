@namespace LumexUI
@inherits LumexInputBase<string?>

<LumexComponent As="@As"
                Class="@RootClass"
                Style="@RootStyle"
                data-slot="root"
                data-focus="@Utils.GetDataAttributeValue( IsFocused )"
                data-filled-focused="@Utils.GetDataAttributeValue( FilledOrFocused )"
                @attributes="@AdditionalAttributes">
    @_renderMainWrapper
</LumexComponent>

@code {
    private void RenderMainWrapper( RenderTreeBuilder __builder )
    {
        if( LabelPlacement is LabelPlacement.Outside )
        {
            <div class="@MainWrapperClass" data-slot="main-wrapper">
                @_renderInputWrapper
            </div>
        }
        else
        {
            @_renderInputWrapper
        }
    }

    private void RenderInputWrapper( RenderTreeBuilder __builder )
    {
        <div class="@InputWrapperClass"
             data-slot="input-wrapper"
             @onclick="@OnInputWrapperClickAsync">

            @if( !string.IsNullOrEmpty( Label ) )
            {
                <label class="@LabelClass" data-slot="label">@Label</label>
            }

            <div class="@InnerWrapperClass" data-slot="inner-wrapper">
                <input class="@InputClass"
                       value="@CurrentValueAsString"
                       placeholder="@Placeholder"
                       data-slot="input"
                       @ref="@ElementReference"
                       @onchange="@OnChangeAsync"
                       @onfocus="@OnFocusAsync"
                       @onblur="@OnBlurAsync" />
            </div>
        </div>
    }
}
