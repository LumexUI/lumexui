@namespace LumexUI
@inherits LumexComponentBase

@using S = ChipSlots;

<LumexComponent As="@As"
                Class="@GetStyles(nameof(S.Base))"
                Style="@Style"
                data-slot="base"
                data-has-start-content="@HasStartContent.ToAttributeValue()"
                data-has-end-content="@HasEndContent.ToAttributeValue()"
                @attributes="@AdditionalAttributes">
    @if( AvatarContent is not null )
    {
        @AvatarContent
    }
    else if( Variant is ChipVariant.Dot && StartContent is null )
    {
        <span class="@GetStyles(nameof(S.Dot))" data-slot="dot" />
    }
    else
    {
        @StartContent
    }

    <span class="@GetStyles(nameof(S.Content))" data-slot="content">
        @ChildContent
    </span>

    @if( OnClose.HasDelegate )
    {
        <span role="button"
              class="@GetStyles(nameof(S.CloseButton))"
              tabindex="0"
              data-slot="close-button"
              aria-label="Close chip"
              @onclick="@OnCloseAsync">
            @if( EndContent is null )
            {
                <CircleXFilledIcon Size="1em" />
            }
            else
            {
                @EndContent
            }
        </span>
    }
    else
    {
        @EndContent
    }
</LumexComponent>