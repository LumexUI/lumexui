@namespace LumexUI
@inherits LumexComponentBase

<LumexComponent Class="@RootClass"
                Style="@RootStyle"
                @attributes="@AdditionalAttributes"
                data-slot="item">
    <h2 class="@HeadingClass" data-slot="heading">
        <button class="@TriggerClass"
                type="button"
                disabled="@_disabled"
                data-slot="trigger"
                @onclick="@ToggleExpansionAsync">
            <div class="@TitleWrapperClass">
                @_renderTitle

                @if( !string.IsNullOrEmpty( Subtitle ) )
                {
                    <span class="@SubtitleClass" data-slot="subtitle">@Subtitle</span>
                }
            </div>
            <span class="@IndicatorClass" data-open="@_expanded">
                @* TODO: Icon component *@
                <svg class="fill-current" width="1.25em" height="1.25em" focusable="false" viewBox="0 -960 960 960">
                    @((MarkupString)IndicatorIcon)
                </svg>
            </span>
        </button>
    </h2>

    <LumexCollapse As="section" Expanded="@_expanded">
        <div class="@ContentClass" data-slot="content">
            @ChildContent
        </div>
    </LumexCollapse>
</LumexComponent>

@if( Context.Owner.ShowDivider )
{
    <LumexDivider />
}

@code {
    private void RenderTitle( RenderTreeBuilder __builder )
    {
        if( !string.IsNullOrEmpty( Title ) || TitleContent is not null )
        {
            <span class="@TitleClass" data-slot="title">
                @if( !string.IsNullOrEmpty( Title ) )
                {
                    @Title
                }
                else if( TitleContent is not null )
                {
                    @TitleContent
                }
            </span>
        }
    }
}