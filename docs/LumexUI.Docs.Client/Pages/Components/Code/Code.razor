@page "/docs/components/code"
@layout DocsContentLayout

@using LumexUI.Docs.Client.Pages.Components.Code.PreviewCodes

<DocsSection Title="Usage">
    <Usage />

    <DocsSection Title="Sizes">
        <p>Use the <code>Size</code> parameter to set the size of the code snippet.</p>
        <Sizes />
    </DocsSection>

    <DocsSection Title="Radius">
        <p>Use the <code>Radius</code> parameter to set the border radius of the code snippet.</p>
        <Radius />
    </DocsSection>

    <DocsSection Title="Colors">
        <p>Use the <code>Color</code> parameter to set the semantic color of the code snippet.</p>
        <Colors />
    </DocsSection>
</DocsSection>

<DocsSection Title="Custom Styles">
    <p>
        You can customize the code component by passing any Tailwind CSS
        classes to the component's <code>Class</code> parameter.
    </p>
    <CustomStyles />
</DocsSection>

<DocsApiSection Components="@_apiComponents" />

@code {
    [CascadingParameter] private DocsContentLayout Layout { get; set; } = default!;

    private readonly Heading[] _headings = new Heading[]
    {
        new("Usage", [
            new("Sizes"),
            new("Colors"),
            new("Radius")
        ]),
        new("Custom Styles"),
        new("API")
    };

    private readonly string[] _apiComponents = new string[]
    {
        nameof(LumexCode)
    };

    protected override void OnInitialized()
    {
        Layout.Initialize(
            title: "Code",
            category: "Components",
            description: "Codes are used to display short inline code snippets.",
            headings: _headings,
            linksProps: new ComponentLinksProps("Code", isServer: true)
        );
    }
}
